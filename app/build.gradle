apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'kotlin-android'

repositories {
    maven { url 'https://github.com/uPhyca/stetho-realm/raw/master/maven-repo' }
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.droibit.autoggler"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            minifyEnabled true
            // Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.flavors[0].name.equals('mock')) {
            variant.ignore = true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        mock.java.srcDirs += 'src/mock/kotlin'
        prod.java.srcDirs += 'src/prod/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    compile "com.github.salomonbrys.kodein:kodein-android:$kodeinAndroidVersion"

    compile "com.android.support:support-v4:$supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$supportLibraryVersion"
    compile "com.android.support:cardview-v7:$supportLibraryVersion"
    compile "com.android.support:design:$supportLibraryVersion"
    compile "com.android.support:preference-v14:$supportLibraryVersion"

    // Play Services dependencies
    compile "com.google.android.gms:play-services-maps:$playServicesVersion"
    compile "com.google.android.gms:play-services-location:$playServicesVersion"
    compile "com.google.android.gms:play-services-contextmanager:$playServicesVersion"

    // Firebase dependencies
    releaseCompile "com.google.firebase:firebase-crash:$firebaseVersion"

    // Realm dependencies
    kapt "io.realm:realm-annotations:$realmVersion"
    kapt "io.realm:realm-annotations-processor:$realmVersion"

    // Stetho dependencies
    debugCompile "com.facebook.stetho:stetho:$stethoVersion"
    debugCompile "com.uphyca:stetho_realm:$stethoRealmVersion"

    compile "io.reactivex:rxjava:$rxJavaVersion"
    compile "io.reactivex:rxkotlin:$rxKotlinVersion"
    compile "io.reactivex:rxandroid:$rxAndroidVersion"

    compile "com.jakewharton.rxrelay:rxrelay:$rxRelayVersion"
    compile "com.github.droibit:rxactivitylauncher:$rxactivitylauncherVersion"

    compile "com.github.frankiesardo:linearlistview:$linearListViewVersion"
    compile "com.jakewharton.timber:timber:$timberVersion"
    compile "com.github.droibit.chopsticks:chopstick:$chopsticksVersion"
    compile "com.github.droibit.chopsticks:chopstick-preference:$chopsticksVersion"
    compile "com.github.droibit.chopsticks:chopstick-resource:$chopsticksVersion"

    // Dependencies for local unit tests
    testCompile "junit:junit:$junitVersion"
    testCompile "org.assertj:assertj-core:$assertjVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "com.nhaarman:mockito-kotlin:$mockitoKotinVersion"

    // Espresso UI Testing
    androidTestCompile "com.squareup.assertj:assertj-android:$assertjAndroidVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestCompile "com.android.support.test:runner:$supportTestRunnerVersion"
    androidTestCompile "com.android.support:support-annotations:$supportLibraryVersion"
}

apply plugin: 'com.google.gms.google-services'
